What does REST stand for?	REpresentational State Transfer
Is REST secure?	No, not by default
What are three reasons why REST is scalable?	Statelessness, layered approach, cacheability
What are three reasons why REST is interoperable?	Standardized resource URIs, client can request data in multiple formats, standardized CRUD approach
What is the result of a successful PUT to a resource URI without any id?	Bulk update
What are the five methods of the HttpMessageConverter interface?	canWrite, canRead, getSupportedMediaTypes, read, write
How can you register custom a HttpMessageConverter?	Implement WebMvcConfigurer
Is REST normally stateless?	Yes
What does @RequestMapping do?	Specifies conditions a request must match for a method to be used as request handler
What are six @RequestMapping parameters?	path, method, params, headers, consumes, produces
What is a stereotype annotation?	Annotations applied to classes to describe role that will be performed
What is the difference between @Controller and @RestController?	@Controller methods usually return Model and View to render response, while @RestController returns serialized output directly to client
What is an equation in Spring annotation terms between @Controller and @RestController?	@RestController = @Controller + @ResponseBody
When do you need @ResponseBody?	When you want Spring to return serialized response from controller method
Where are the three places @ResponseBody can be used?	Top of class, top of method, on top of other annotations
What does a 201 status code from a POST operation mean?	Resource created
What does a 200 status code from a POST operation mean?	Processing executed, no resources created
What does a 204 status code from a POST operation mean?	"No Content", or processing executed and no response retrieved
What does status code 202 mean in the case of asynchronous operations?	Accepted, and may return Location header with URI that can be used for pooling
When do you need @ResponseStatus?	When you want to override default HTTP status returned from controller handler method
What are the three places @ResponseStatus can be applied?	Controller class, controller method, at level of exceptions that may be thrown from controller
When do you need @RequestBody?	When you want to bind web request body to a controller parameter or also use @Valid annotation
What do @RequestBody and @ResponseBody have in common?	Both use HttpMessageConverter
Where can @RequestBody be used?	On top of controller method parameter
Do you need Spring MVC in your classpath?	Yes, at least at runtime
What Spring Boot starter would you use for a Spring REST application?	spring-boot-starter-web
What is RestTemplate?	Synchronous client to perform HTTP requests
What are six advantages of RestTemplate?	Simplicity, automatic object serialization/deserialization, customizable error management with ResponseErrorHandler, customizable HttpMessageConverters, customizable ClientHttpRequestFactory, automatic content type detection
Where can @RequestParam be used?	On top of a parameter in a controller method
Where can @PathVariable be used?	On top of a parameter in a controller method
What is Spring @CookieValue?	Annotation to get the value of any HTTP cookie without iterating over all the cookies fetched from the request
How can a cookie value be set using Spring?	HttpServletResponse instance method addCookie()
What is Spring @RequestHeader	Access request header values or all header key-value pairs when binding against a Map
How can you intercept controller exceptions at a global level using Spring?	Annotate a class with @ControllerAdvice and annotate a method with @ExceptionHandler
How can you intercept exceptions at the controller level using Spring?	Annotate a method in the controller with @ExceptionHandler
What are the seven steps of Spring Bean creation in an Application Context?	Instantiation, properties and dependencies set, BeanPostProcessor::postProcessBeforeInitialization, @PostConstruct, InitializingBean::afterPropertiesSet, @Bean(initMethod), BeanPostProcessor::postProcessAfterInitialization
What are six advantages of dependency injection?	Reusability, readability, maintainability, testability and cohesion, and decoupling
What are the three types of dependency injection?	Constructor injection, setter injection, interface injection
What commonly occurring problem does the dependency injection pattern solve?	The problem of flexible dependencies creation
What are three advantages of using Java interfaces in Spring?	JDK Dynamic Proxy, implementation hiding and easy bean switching
What are eight responsibilities of the Spring ApplicationContext?	Initiates, configures and assembles Beans, manages Bean lifecycle, is a Bean factory, is a resource loader, can push events to registered event listeners and exposes the environment, which allows property resolution
What are five ApplicationContext types?	AnnotationConfigApplicationContext, AnnotationConfigWebApplicationContext, ClassPathXmlApplicationContext, FileSystemXmlApplicationContext, XmlWebApplicationContext
How do you create a new ApplicationContext instance in a Spring Boot web application?	Annotate a class with @SpringBootApplication
How do you create a new ApplicationContext instance in a Spring Boot console application?	Annotate a class implementing CommandLineRunner with @SpringBootApplication
How do you create a new ApplicationContext instance in a Spring Servlet 2 web application?	Configure web.xml with ContextLoaderListener and DispatcherServlet
How do you create a new ApplicationContext instance in a Spring Servlet 3 web application?	Implement WebApplicationInitializer with either AnnotationConfigWebApplicationContext or with XmlWebApplicationContext
What are three classes that can be used to create a new ApplicationContext instance in a non-web Spring application?	AnnotationConfigApplicationContext, ClassPathXmlApplicationContext, FileSystemXmlApplicationContext
What are the two steps in the Context creation phase in an ApplicationContext?	Bean definitions are created, BeanFactoryPostProcessors invoked
What are the three steps of Spring Bean destruction in an Application Context?	@PreDestroy, DisposableBean::destroy, @Bean(destroyMethod)
How are you going to create an ApplicationContext in an integration test?	Add spring-test dependency, add @RunWith(SpringRunner.class) to test class, add @ContextConfiguration to test class
What is the preferred way to close an application context in a standalone non-web application?	ConfigurableApplicationContext#registerShutdownHook
What are two non-preferred ways to close an application context in a standalone non-web application?	try block, context close method
What is the preferred way to close an application context in a Spring web application?	ContextLoaderListener automatically closes context
How does a Spring Boot application close an application context?	Shutdown hook automatically registered, Application Context automatically closed, ContextLoaderListener automatically closes context for web applications
What is required for Spring dependency injection using Java	configuration?
@Configuration on class, @Bean and, where required, @Autowired	What is Spring component scanning?
Classpath is searched for classes annotated with stereotypes annotations from which bean definitions are created	What does Spring do with Stereotypes?
Creates bean definitions from classes annotated by them	What are four key Stereotypes?
Component, Service, Repository, Controller	What are Meta-Annotations?
Annotations used to create new annotations	What are the six Spring bean scopes?
Singleton, Prototype, Request, Session, Application, Websocket	What is the Spring bean default scope?
Singleton	True or false: Singleton Beans are lazily instantiated by default
False	True or false: Prototype Beans are lazily instantiated by default
True	What are two ways to change the lazy instantiation of Spring beans?
@ComponentScan, @Lazy	What is a Spring property source?
A Spring abstraction on environment key-value pairs	What are six sources for Spring property source?
JVM properties, system environment variables, JNDI properties, Servlet parameters, properties file on filesystem, properties file on classpath	What is a Spring BeanFactoryPostProcessor? What is it for?
An interface with a single method, postProcessBeanFactory. The purpose is to modify Spring Bean Metadata before Bean creation.	When in the Spring bean lifecycle if BeanFactoryPostProcessor invoked?
After Spring reads Bean definitions, but before any	Spring Bean is created
How must any Spring BeanFactoryPostProcessor bean be registered?	With a public static method
What is a PropertySourcesPlaceholderConfigurer used for?	To resolve ${...} placeholders in bean definition property values and @Value annotations against the current Spring Environment and its set of PropertySources
What are the two methods of the BeanPostProcessor interface?	postProcessBeforeInitialization, postProcessAfterInitialization
What interface must be implemented in Servlet 3.0 environments to configure ServletContext programmatically?	WebApplicationInitializer
What is the difference between BeanPostProcessor and BeanFactoryPostProcessor?	BeanPostProcessor works with Bean objects and BeanFactoryPostProcessor works with Bean definitions
What is the recommended way to create a custom BeanPostProcessor?	With a static @Bean method in Application Configuration
What are the three ways to declare a Spring Bean initialization method?	Create method in Spring Bean annotated with @PostConstruct, implement InitializingBean::afterPropertiesSet, create Bean in Configuration class with @Bean(initMethod) method
What are the three ways to declare a Spring Bean destroy method?	Create method annotated with @PreDestroy annotation, implement DisposableBean::destroy, create Bean in Configuration class with @Bean(destroyMethod) method
True or false: AnnotationConfigApplicationContext adds support for @PostConstruct and @PreDestroy automatically	True
True or false: @Autowired dependency is not required by default	False
How can the parameters to an @Autowired dependency be made optional?	@Nullable or with type Optional
True or false: @Autowired fields can have any visibility level	True
What are the five @Autowired dependency resolution steps?	Match exactly by type, prefer @Primary annotation, use @Qualifier to find match, search by bean name, throw exception
When does @Autowired injection occur in the Bean lifecycle?	After instantiation and before the initialization methods: @PostConstruct, InitializingBean, @Bean(init)
True or false: A class with only one constructor requires @Autowired	False
True or false: A class with only multiple constructor requires one of them to be @Autowired	True
What are four ways to test with private fields?	SpringRunner with ContextConfiguration and @MockBean, ReflectionTestUtils, MockitoJUnitRunner, @TestPropertySource
What is a proxy object?	An object that adds additional logic on what is being proxied without modifying code of proxied object
What are three limitations of JDK Dynamic Proxy?	Requires proxy to implement an interface, only interface methods are proxied, no self-invocation
What are four limitations of CGLIB Proxy?	Ineligible for final classes, ineligible for final methods, no self-invocation, private methods are not proxied
What are four disadvantages of Spring proxy objects?	Can complicate debugging, unchecked exception needed for exceptions not in original method, performance issues for IO proxy code, can complicate equals operator results
What is an advantage of Java Config over XML config?	Compile-time feedback due to type-checking
What are three advantages of Java Config over annotation-based config?	Separation of concerns, technology agnostic, ability to integrate Spring with external libraries
Why can't a final class be annotated with @Configuration?	Because Spring proxies configuration classes with CGLIB, which doesn't work with final classes or methods
How do @Configuration annotated classes ensure beans will be singleton?	With a CGLIB configuration proxy
What does the @Import annotation do?	Indicates one or more configuration classes to import
What are four ways to apply the @Profile annotation?	At @Component class level, at @Configuration class level, per @Bean method in @Configuration class, in a custom annotation definition
What are the five ways to activate a Spring profile?	ConfigurableEnvironment, spring.profiles.active command-line switch, @ActiveProfiles in JUnit tests, SpringApplicationBuilder in Spring Boot, application.properties in Spring Boot
True or false: @Bean cannot be used with @Profile	False
True or false: @Bean can be used with @Component	True
What is the limit on the number of active Spring profiles?	Integer.MAX_VALUE, or 2^31 − 1
What are three field types does @Value accept?	Simple value, property reference, SpEL
True or false: Method parameter injection will not be performed automatically if not one of @Value or @Autowired present at the method level	True
What are the three ways SpEL can be invoked in Spring?	@Value("#{...}"), ExpressionParser, EvaluationContext
What system property turns on the SpEL compiler?	spring.expression.compiler.mode
What are the three SpEL compiler modes?	Off, immediate, mixed
What six types of SpEL expressions are not supported in compiled mode?	Assignment, conversion service, custom resolver, custom accessor, SpEL projection, SpEL selection
What is the difference between $ and # in @Value expressions?	$ references properties, # is for SpEL expressions
What 10 things can be referenced with SpEL?	Static fields and methods from a class, Spring Bean properties and methods, SpEL variables and reference object properties and methods, Spring application environment properties, system properties, system environment properties
What are three property sources for a Spring standalone application?	Properties files, JVM system properties, system environment variables
What are six property sources for a Servlet Container Spring application?	Properties files, JVM system properties, system environment variables, JNDI, ServletConfig init parameters, ServletContext init parameters
What are ten property sources for a Spring Boot application?	~/.spring-boot-devtools.properties, command line arguments, SPRING_APPLICATION_JSON property, RandomValuePropertySource, application properties files, @PropertySource annotations on @Configuration classes, SpringApplication.setDefaultProperties, OS environment variables, Java system properties, JNDI
What is the Environment abstraction in Spring?	Application environment profiles and properties
What are three Bean initialization methods?	@PostConstruct, initializingBean:afterPropertiesSet, @Bean(init)